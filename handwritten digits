import tensorflow as tf 

from tensorflow.keras.datasets import mnist 

from tensorflow.keras.models import Sequential 

from tensorflow.keras.layers import Dense, Flatten 

from tensorflow.keras.utils import to_categorical 

import matplotlib.pyplot as plt 

 

# Load dataset 

(x_train, y_train), (x_test, y_test) = mnist.load_data() 

 

# Normalize pixel values 

x_train, x_test = x_train / 255.0, x_test / 255.0 

 

# One-hot encode the labels 

y_train_cat = to_categorical(y_train) 

y_test_cat = to_categorical(y_test) 

 

# Build the model 

model = Sequential([ 

    Flatten(input_shape=(28, 28)), 

    Dense(128, activation='relu'), 

    Dense(64, activation='relu'), 

    Dense(10, activation='softmax') 

]) 

 

# Compile the model 

model.compile(optimizer='adam', 

              loss='categorical_crossentropy', 

              metrics=['accuracy']) 

 

# Train the model 

model.fit(x_train, y_train_cat, epochs=5, validation_split=0.1) 

 

# Evaluate the model 

loss, accuracy = model.evaluate(x_test, y_test_cat) 

print(f'Test Accuracy: {accuracy * 100:.2f}%') 

 

# Predict and visualize 

predictions = model.predict(x_test) 

 

# Show some sample predictions 

for i in range(5): 

    plt.imshow(x_test[i], cmap='gray') 

    plt.title(f"Prediction: {predictions[i].argmax()}, Actual: {y_test[i]}") 

    plt.axis('off') 

    plt.show() 
